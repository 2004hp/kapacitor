// Code generated by protoc-gen-gogo.
// source: internal/data.proto
// DO NOT EDIT!

/*
Package internal is a generated protocol buffer package.

It is generated from these files:
	internal/data.proto

It has these top-level messages:
	WriteShardRequest
	WriteShardResponse
	MapShardRequest
	MapShardResponse
*/
package internal

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.GoGoProtoPackageIsVersion1

type WriteShardRequest struct {
	ShardID          *uint64  `protobuf:"varint,1,req,name=ShardID,json=shardID" json:"ShardID,omitempty"`
	Points           [][]byte `protobuf:"bytes,2,rep,name=Points,json=points" json:"Points,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *WriteShardRequest) Reset()                    { *m = WriteShardRequest{} }
func (m *WriteShardRequest) String() string            { return proto.CompactTextString(m) }
func (*WriteShardRequest) ProtoMessage()               {}
func (*WriteShardRequest) Descriptor() ([]byte, []int) { return fileDescriptorData, []int{0} }

func (m *WriteShardRequest) GetShardID() uint64 {
	if m != nil && m.ShardID != nil {
		return *m.ShardID
	}
	return 0
}

func (m *WriteShardRequest) GetPoints() [][]byte {
	if m != nil {
		return m.Points
	}
	return nil
}

type WriteShardResponse struct {
	Code             *int32  `protobuf:"varint,1,req,name=Code,json=code" json:"Code,omitempty"`
	Message          *string `protobuf:"bytes,2,opt,name=Message,json=message" json:"Message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *WriteShardResponse) Reset()                    { *m = WriteShardResponse{} }
func (m *WriteShardResponse) String() string            { return proto.CompactTextString(m) }
func (*WriteShardResponse) ProtoMessage()               {}
func (*WriteShardResponse) Descriptor() ([]byte, []int) { return fileDescriptorData, []int{1} }

func (m *WriteShardResponse) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *WriteShardResponse) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type MapShardRequest struct {
	ShardID          *uint64 `protobuf:"varint,1,req,name=ShardID,json=shardID" json:"ShardID,omitempty"`
	Query            *string `protobuf:"bytes,2,req,name=Query,json=query" json:"Query,omitempty"`
	ChunkSize        *int32  `protobuf:"varint,3,req,name=ChunkSize,json=chunkSize" json:"ChunkSize,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MapShardRequest) Reset()                    { *m = MapShardRequest{} }
func (m *MapShardRequest) String() string            { return proto.CompactTextString(m) }
func (*MapShardRequest) ProtoMessage()               {}
func (*MapShardRequest) Descriptor() ([]byte, []int) { return fileDescriptorData, []int{2} }

func (m *MapShardRequest) GetShardID() uint64 {
	if m != nil && m.ShardID != nil {
		return *m.ShardID
	}
	return 0
}

func (m *MapShardRequest) GetQuery() string {
	if m != nil && m.Query != nil {
		return *m.Query
	}
	return ""
}

func (m *MapShardRequest) GetChunkSize() int32 {
	if m != nil && m.ChunkSize != nil {
		return *m.ChunkSize
	}
	return 0
}

type MapShardResponse struct {
	Code             *int32   `protobuf:"varint,1,req,name=Code,json=code" json:"Code,omitempty"`
	Message          *string  `protobuf:"bytes,2,opt,name=Message,json=message" json:"Message,omitempty"`
	Data             []byte   `protobuf:"bytes,3,opt,name=Data,json=data" json:"Data,omitempty"`
	TagSets          []string `protobuf:"bytes,4,rep,name=TagSets,json=tagSets" json:"TagSets,omitempty"`
	Fields           []string `protobuf:"bytes,5,rep,name=Fields,json=fields" json:"Fields,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *MapShardResponse) Reset()                    { *m = MapShardResponse{} }
func (m *MapShardResponse) String() string            { return proto.CompactTextString(m) }
func (*MapShardResponse) ProtoMessage()               {}
func (*MapShardResponse) Descriptor() ([]byte, []int) { return fileDescriptorData, []int{3} }

func (m *MapShardResponse) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *MapShardResponse) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *MapShardResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *MapShardResponse) GetTagSets() []string {
	if m != nil {
		return m.TagSets
	}
	return nil
}

func (m *MapShardResponse) GetFields() []string {
	if m != nil {
		return m.Fields
	}
	return nil
}

func init() {
	proto.RegisterType((*WriteShardRequest)(nil), "internal.WriteShardRequest")
	proto.RegisterType((*WriteShardResponse)(nil), "internal.WriteShardResponse")
	proto.RegisterType((*MapShardRequest)(nil), "internal.MapShardRequest")
	proto.RegisterType((*MapShardResponse)(nil), "internal.MapShardResponse")
}

var fileDescriptorData = []byte{
	// 254 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x90, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0x95, 0xd4, 0x49, 0xc8, 0x09, 0x09, 0x30, 0x08, 0x79, 0x60, 0xa8, 0x32, 0x65, 0x82,
	0x77, 0xa0, 0x05, 0x89, 0xa1, 0x12, 0x38, 0x48, 0x8c, 0xc8, 0x6a, 0x8e, 0x36, 0xa2, 0xc4, 0xae,
	0xed, 0x0c, 0xf0, 0x00, 0x3c, 0x37, 0x67, 0x47, 0x11, 0x8c, 0xa8, 0x9b, 0xbf, 0xf3, 0xf9, 0xbb,
	0xf3, 0x0f, 0xe7, 0x5d, 0xef, 0xd1, 0xf6, 0x6a, 0x77, 0xd3, 0x2a, 0xaf, 0xae, 0x8d, 0xd5, 0x5e,
	0xf3, 0xa3, 0xa9, 0x58, 0xdd, 0xc1, 0xd9, 0x8b, 0xed, 0x3c, 0x36, 0x5b, 0x65, 0x5b, 0x89, 0xfb,
	0x01, 0x9d, 0xe7, 0x02, 0x8a, 0xc8, 0x0f, 0x4b, 0x91, 0xcc, 0xd3, 0x9a, 0xc9, 0xc2, 0x8d, 0xc8,
	0x2f, 0x21, 0x7f, 0xd4, 0xf4, 0xd8, 0x89, 0x74, 0x3e, 0xab, 0x8f, 0x65, 0x6e, 0x22, 0x55, 0xb7,
	0xc0, 0xff, 0x6a, 0x9c, 0xd1, 0xbd, 0x43, 0xce, 0x81, 0x2d, 0x74, 0x8b, 0x51, 0x92, 0x49, 0xb6,
	0xa6, 0x73, 0x70, 0xaf, 0xd0, 0x39, 0xb5, 0x41, 0x52, 0x24, 0x75, 0x29, 0x8b, 0x8f, 0x11, 0xab,
	0x57, 0x38, 0x59, 0x29, 0xf3, 0xcf, 0x45, 0x2e, 0x20, 0x7b, 0x1a, 0xd0, 0x7e, 0x92, 0x24, 0x25,
	0x49, 0xb6, 0x0f, 0xc0, 0xaf, 0xa0, 0x5c, 0x6c, 0x87, 0xfe, 0xbd, 0xe9, 0xbe, 0x50, 0xcc, 0xe2,
	0xd4, 0x72, 0x3d, 0x15, 0xaa, 0xef, 0x04, 0x4e, 0x7f, 0x27, 0x1c, 0xb2, 0x63, 0xe8, 0x5e, 0x52,
	0x8c, 0xe4, 0x4e, 0xe8, 0xf7, 0x2c, 0x44, 0x1a, 0xba, 0x9f, 0xd5, 0xa6, 0x41, 0x0a, 0x85, 0x51,
	0x28, 0xd4, 0xed, 0x47, 0x0c, 0x69, 0xdd, 0x77, 0xb8, 0x6b, 0x9d, 0xc8, 0xe2, 0x45, 0xfe, 0x16,
	0xe9, 0x27, 0x00, 0x00, 0xff, 0xff, 0x6e, 0xa2, 0x56, 0x3e, 0x94, 0x01, 0x00, 0x00,
}
